{"version":3,"file":"stegaEncodeSourceMap-CoIcWO4A.js","sources":["../../node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js"],"sourcesContent":["import { isRecord, C } from \"./stegaClean.js\";\r\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/;\r\nfunction isKeySegment(segment) {\r\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\r\n}\r\nfunction toString(path) {\r\n  if (!Array.isArray(path))\r\n    throw new Error(\"Path is not an array\");\r\n  return path.reduce((target, segment, i) => {\r\n    const segmentType = typeof segment;\r\n    if (segmentType === \"number\")\r\n      return `${target}[${segment}]`;\r\n    if (segmentType === \"string\")\r\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\r\n    if (isKeySegment(segment) && segment._key)\r\n      return `${target}[_key==\"${segment._key}\"]`;\r\n    if (Array.isArray(segment)) {\r\n      const [from, to] = segment;\r\n      return `${target}[${from}:${to}]`;\r\n    }\r\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\r\n  }, \"\");\r\n}\r\nconst ESCAPE = {\r\n  \"\\f\": \"\\\\f\",\r\n  \"\\n\": \"\\\\n\",\r\n  \"\\r\": \"\\\\r\",\r\n  \"\t\": \"\\\\t\",\r\n  \"'\": \"\\\\'\",\r\n  \"\\\\\": \"\\\\\\\\\"\r\n}, UNESCAPE = {\r\n  \"\\\\f\": \"\\f\",\r\n  \"\\\\n\": `\r\n`,\r\n  \"\\\\r\": \"\\r\",\r\n  \"\\\\t\": \"\t\",\r\n  \"\\\\'\": \"'\",\r\n  \"\\\\\\\\\": \"\\\\\"\r\n};\r\nfunction jsonPath(path) {\r\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\r\n}\r\nfunction parseJsonPath(path) {\r\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\r\n  let match;\r\n  for (; (match = parseRe.exec(path)) !== null; ) {\r\n    if (match[1] !== void 0) {\r\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\r\n      parsed.push(key);\r\n      continue;\r\n    }\r\n    if (match[2] !== void 0) {\r\n      parsed.push(parseInt(match[2], 10));\r\n      continue;\r\n    }\r\n    if (match[3] !== void 0) {\r\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\r\n      parsed.push({\r\n        _key,\r\n        _index: -1\r\n      });\r\n      continue;\r\n    }\r\n  }\r\n  return parsed;\r\n}\r\nfunction jsonPathToStudioPath(path) {\r\n  return path.map((segment) => {\r\n    if (typeof segment == \"string\" || typeof segment == \"number\")\r\n      return segment;\r\n    if (segment._key !== \"\")\r\n      return { _key: segment._key };\r\n    if (segment._index !== -1)\r\n      return segment._index;\r\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\r\n  });\r\n}\r\nfunction jsonPathToMappingPath(path) {\r\n  return path.map((segment) => {\r\n    if (typeof segment == \"string\" || typeof segment == \"number\")\r\n      return segment;\r\n    if (segment._index !== -1)\r\n      return segment._index;\r\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\r\n  });\r\n}\r\nfunction resolveMapping(resultPath, csm) {\r\n  if (!csm?.mappings)\r\n    return;\r\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\r\n  if (csm.mappings[resultMappingPath] !== void 0)\r\n    return {\r\n      mapping: csm.mappings[resultMappingPath],\r\n      matchedPath: resultMappingPath,\r\n      pathSuffix: \"\"\r\n    };\r\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\r\n  if (mappings.length == 0)\r\n    return;\r\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\r\n  return { mapping, matchedPath, pathSuffix };\r\n}\r\nfunction isArray(value) {\r\n  return value !== null && Array.isArray(value);\r\n}\r\nfunction walkMap(value, mappingFn, path = []) {\r\n  if (isArray(value))\r\n    return value.map((v, idx) => {\r\n      if (isRecord(v)) {\r\n        const _key = v._key;\r\n        if (typeof _key == \"string\")\r\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\r\n      }\r\n      return walkMap(v, mappingFn, path.concat(idx));\r\n    });\r\n  if (isRecord(value)) {\r\n    if (value._type === \"block\" || value._type === \"span\") {\r\n      const result = { ...value };\r\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\r\n    }\r\n    return Object.fromEntries(\r\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\r\n    );\r\n  }\r\n  return mappingFn(value, path);\r\n}\r\nfunction encodeIntoResult(result, csm, encoder) {\r\n  return walkMap(result, (value, path) => {\r\n    if (typeof value != \"string\")\r\n      return value;\r\n    const resolveMappingResult = resolveMapping(path, csm);\r\n    if (!resolveMappingResult)\r\n      return value;\r\n    const { mapping, matchedPath } = resolveMappingResult;\r\n    if (mapping.type !== \"value\" || mapping.source.type !== \"documentValue\")\r\n      return value;\r\n    const sourceDocument = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path], matchPathSegments = parseJsonPath(matchedPath), fullSourceSegments = parseJsonPath(sourcePath).concat(path.slice(matchPathSegments.length));\r\n    return encoder({\r\n      sourcePath: fullSourceSegments,\r\n      sourceDocument,\r\n      resultPath: path,\r\n      value\r\n    });\r\n  });\r\n}\r\nconst DRAFTS_FOLDER = \"drafts\", VERSION_FOLDER = \"versions\", PATH_SEPARATOR = \".\", DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`, VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`;\r\nfunction isDraftId(id) {\r\n  return id.startsWith(DRAFTS_PREFIX);\r\n}\r\nfunction isVersionId(id) {\r\n  return id.startsWith(VERSION_PREFIX);\r\n}\r\nfunction isPublishedId(id) {\r\n  return !isDraftId(id) && !isVersionId(id);\r\n}\r\nfunction getVersionFromId(id) {\r\n  if (!isVersionId(id)) return;\r\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR);\r\n  return versionId;\r\n}\r\nfunction getPublishedId(id) {\r\n  return isVersionId(id) ? id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) : isDraftId(id) ? id.slice(DRAFTS_PREFIX.length) : id;\r\n}\r\nfunction createEditUrl(options) {\r\n  const {\r\n    baseUrl,\r\n    workspace: _workspace = \"default\",\r\n    tool: _tool = \"default\",\r\n    id: _id,\r\n    type,\r\n    path,\r\n    projectId,\r\n    dataset\r\n  } = options;\r\n  if (!baseUrl)\r\n    throw new Error(\"baseUrl is required\");\r\n  if (!path)\r\n    throw new Error(\"path is required\");\r\n  if (!_id)\r\n    throw new Error(\"id is required\");\r\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\r\n    throw new Error(\"baseUrl must not end with a slash\");\r\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\r\n    baseUrl,\r\n    id,\r\n    type,\r\n    path: stringifiedPath\r\n  });\r\n  if (workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), isPublishedId(_id))\r\n    searchParams.set(\"perspective\", \"published\");\r\n  else if (isVersionId(_id)) {\r\n    const versionId = getVersionFromId(_id);\r\n    searchParams.set(\"perspective\", versionId);\r\n  }\r\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\r\n  workspace && segments.push(workspace);\r\n  const routerParams = [\r\n    \"mode=presentation\",\r\n    `id=${id}`,\r\n    `type=${type}`,\r\n    `path=${encodeURIComponent(stringifiedPath)}`\r\n  ];\r\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\r\n}\r\nfunction resolveStudioBaseRoute(studioUrl) {\r\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\r\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\r\n}\r\nconst filterDefault = ({ sourcePath, resultPath, value }) => {\r\n  if (isValidDate(value) || isValidURL(value))\r\n    return !1;\r\n  const endPath = sourcePath.at(-1);\r\n  return !(sourcePath.at(-2) === \"slug\" && endPath === \"current\" || typeof endPath == \"string\" && (endPath.startsWith(\"_\") || endPath.endsWith(\"Id\")) || sourcePath.some(\r\n    (path) => path === \"meta\" || path === \"metadata\" || path === \"openGraph\" || path === \"seo\"\r\n  ) || hasTypeLike(sourcePath) || hasTypeLike(resultPath) || typeof endPath == \"string\" && denylist.has(endPath));\r\n}, denylist = /* @__PURE__ */ new Set([\r\n  \"color\",\r\n  \"colour\",\r\n  \"currency\",\r\n  \"email\",\r\n  \"format\",\r\n  \"gid\",\r\n  \"hex\",\r\n  \"href\",\r\n  \"hsl\",\r\n  \"hsla\",\r\n  \"icon\",\r\n  \"id\",\r\n  \"index\",\r\n  \"key\",\r\n  \"language\",\r\n  \"layout\",\r\n  \"link\",\r\n  \"linkAction\",\r\n  \"locale\",\r\n  \"lqip\",\r\n  \"page\",\r\n  \"path\",\r\n  \"ref\",\r\n  \"rgb\",\r\n  \"rgba\",\r\n  \"route\",\r\n  \"secret\",\r\n  \"slug\",\r\n  \"status\",\r\n  \"tag\",\r\n  \"template\",\r\n  \"theme\",\r\n  \"type\",\r\n  \"textTheme\",\r\n  \"unit\",\r\n  \"url\",\r\n  \"username\",\r\n  \"variant\",\r\n  \"website\"\r\n]);\r\nfunction isValidDate(dateString) {\r\n  return /^\\d{4}-\\d{2}-\\d{2}/.test(dateString) ? !!Date.parse(dateString) : !1;\r\n}\r\nfunction isValidURL(url) {\r\n  try {\r\n    new URL(url, url.startsWith(\"/\") ? \"https://acme.com\" : void 0);\r\n  } catch {\r\n    return !1;\r\n  }\r\n  return !0;\r\n}\r\nfunction hasTypeLike(path) {\r\n  return path.some((segment) => typeof segment == \"string\" && segment.match(/type/i) !== null);\r\n}\r\nconst TRUNCATE_LENGTH = 20;\r\nfunction stegaEncodeSourceMap(result, resultSourceMap, config) {\r\n  const { filter, logger, enabled } = config;\r\n  if (!enabled) {\r\n    const msg = \"config.enabled must be true, don't call this function otherwise\";\r\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\r\n  }\r\n  if (!resultSourceMap)\r\n    return logger?.error?.(\"[@sanity/client]: Missing Content Source Map from response body\", {\r\n      result,\r\n      resultSourceMap,\r\n      config\r\n    }), result;\r\n  if (!config.studioUrl) {\r\n    const msg = \"config.studioUrl must be defined\";\r\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\r\n  }\r\n  const report = {\r\n    encoded: [],\r\n    skipped: []\r\n  }, resultWithStega = encodeIntoResult(\r\n    result,\r\n    resultSourceMap,\r\n    ({ sourcePath, sourceDocument, resultPath, value }) => {\r\n      if ((typeof filter == \"function\" ? filter({ sourcePath, resultPath, filterDefault, sourceDocument, value }) : filterDefault({ sourcePath, resultPath, value })) === !1)\r\n        return logger && report.skipped.push({\r\n          path: prettyPathForLogging(sourcePath),\r\n          value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\r\n          length: value.length\r\n        }), value;\r\n      logger && report.encoded.push({\r\n        path: prettyPathForLogging(sourcePath),\r\n        value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\r\n        length: value.length\r\n      });\r\n      const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\r\n        typeof config.studioUrl == \"function\" ? config.studioUrl(sourceDocument) : config.studioUrl\r\n      );\r\n      if (!baseUrl) return value;\r\n      const { _id: id, _type: type, _projectId: projectId, _dataset: dataset } = sourceDocument;\r\n      return C(\r\n        value,\r\n        {\r\n          origin: \"sanity.io\",\r\n          href: createEditUrl({\r\n            baseUrl,\r\n            workspace,\r\n            tool,\r\n            id,\r\n            type,\r\n            path: sourcePath,\r\n            ...!config.omitCrossDatasetReferenceData && { dataset, projectId }\r\n          })\r\n        },\r\n        // We use custom logic to determine if we should skip encoding\r\n        !1\r\n      );\r\n    }\r\n  );\r\n  if (logger) {\r\n    const isSkipping = report.skipped.length, isEncoding = report.encoded.length;\r\n    if ((isSkipping || isEncoding) && ((logger?.groupCollapsed || logger.log)?.(\"[@sanity/client]: Encoding source map into result\"), logger.log?.(\r\n      `[@sanity/client]: Paths encoded: ${report.encoded.length}, skipped: ${report.skipped.length}`\r\n    )), report.encoded.length > 0 && (logger?.log?.(\"[@sanity/client]: Table of encoded paths\"), (logger?.table || logger.log)?.(report.encoded)), report.skipped.length > 0) {\r\n      const skipped = /* @__PURE__ */ new Set();\r\n      for (const { path } of report.skipped)\r\n        skipped.add(path.replace(reKeySegment, \"0\").replace(/\\[\\d+\\]/g, \"[]\"));\r\n      logger?.log?.(\"[@sanity/client]: List of skipped paths\", [...skipped.values()]);\r\n    }\r\n    (isSkipping || isEncoding) && logger?.groupEnd?.();\r\n  }\r\n  return resultWithStega;\r\n}\r\nfunction prettyPathForLogging(path) {\r\n  return toString(jsonPathToStudioPath(path));\r\n}\r\nvar stegaEncodeSourceMap$1 = /* @__PURE__ */ Object.freeze({\r\n  __proto__: null,\r\n  stegaEncodeSourceMap\r\n});\r\nexport {\r\n  encodeIntoResult,\r\n  stegaEncodeSourceMap,\r\n  stegaEncodeSourceMap$1\r\n};\r\n//# sourceMappingURL=stegaEncodeSourceMap.js.map\r\n"],"names":["reKeySegment","toString","path","Array","isArray","Error","reduce","target","segment","i","segmentType","test","trim","isKeySegment","_key","from","to","JSON","stringify","ESCAPE","UNESCAPE","parseJsonPath","parsed","parseRe","match","exec","key","replace","m","push","_index","parseInt","jsonPathToStudioPath","map","resolveMapping","resultPath","csm","mappings","resultMappingPath","join","jsonPath","mapping","matchedPath","pathSuffix","Object","entries","filter","startsWith","sort","key1","key2","length","substring","walkMap","value","mappingFn","v","idx","isRecord","concat","_type","result","children","text","fromEntries","k","encodeIntoResult","encoder","resolveMappingResult","type","source","sourceDocument","documents","document","sourcePath","paths","matchPathSegments","fullSourceSegments","slice","PATH_SEPARATOR","DRAFTS_PREFIX","VERSION_PREFIX","isDraftId","id","isVersionId","createEditUrl","options","baseUrl","workspace","_workspace","tool","_tool","_id","projectId","dataset","endsWith","split","getPublishedId","stringifiedPath","searchParams","URLSearchParams","set","isPublishedId","versionId","_versionPrefix","_publishedId","getVersionFromId","segments","routerParams","encodeURIComponent","filterDefault","dateString","Date","parse","url","URL","isValidURL","endPath","at","some","hasTypeLike","denylist","has","Set","stegaEncodeSourceMap","resultSourceMap","config","logger","enabled","msg","_a","error","call","TypeError","_b","studioUrl","_c","report","encoded","skipped","resultWithStega","prettyPathForLogging","resolveStudioBaseRoute","_projectId","_dataset","C","origin","href","omitCrossDatasetReferenceData","isSkipping","isEncoding","_d","groupCollapsed","log","_e","_f","_g","table","add","_h","values","_i","groupEnd","stegaEncodeSourceMap$1","freeze","__proto__"],"mappings":"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","x_google_ignoreList":[0]}